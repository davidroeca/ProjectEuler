"""
Problem 29:

Consider all integer combinations of ab for 2 <= a <= 5 and 2 <= b <= 5:

    2^2=4, 2^3=8, 2^4=16, 2^5=32
    32=9, 33=27, 3^4=81, 3^5=243
    42=16, 43=64, 44=256, 45=1024
    52=25, 53=125, 54=625, 55=3125

If they are then placed in numerical order, with any repeats removed, we get the
following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by a^b for 2 <= a <= 100
and 2 <= b <= 100?
"""
def unique_list(iterable):
    return list(set(iterable))

def get_n_unique_terms(iterable):
    return len(unique_list(iterable))

def a_pow_b_gen(min_a=2, max_a=100, min_b=2, max_b=100):
    for a in xrange(min_a, max_a + 1):
        for b in xrange(min_b, max_b + 1):
            yield a ** b

def main():
    print get_n_unique_terms(a_pow_b_gen())

if __name__ == "__main__":
    main()
