'''
Problem 44:

Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten
pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
70 - 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
difference are pentagonal and D = |Pk - Pj| is minimised; what is the value of
D?
'''
from p042 import is_square
from math import sqrt

def pentagonal(n):
    return n * (3 * n - 1) // 2

def is_pentagonal(pn):
    '''Leverages:
    The inverse of pentagonal: n = 1/6 + 1/6 * sqrt(1 + 24 * pn)
    Therefore, 1 + 24 * pn must be square for pn to be pentagonal.
    Also, since n must be an integer, the evaluated sqrt must:
        Have a modulus of 5 with 6
    '''
    special_factor = 1 + 24 * pn
    if is_square(special_factor):
        given_root = int(sqrt(special_factor))
        if given_root % 6 == 5:
            return True
    return False

def find_min_diff():
    '''Assumes:
    n1 > n2,
    n1 + n2 = n3,
    n1 - n2 = n4
    '''
    i1 = 2
    pairs = []
    while not pairs:
        n1 = pentagonal(i1)
        for i2 in range(1, i1):
            n2 = pentagonal(i2)
            if is_pentagonal(n1 + n2) and is_pentagonal(n1 - n2):
                pairs.append((n1, n2))
        i1 += 1
    diffs = [n1 - n2 for n1, n2 in pairs]
    return min(diffs)
        
def main():
    print(find_min_diff())

if __name__ == "__main__":
    main()
